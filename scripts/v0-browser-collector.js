#!/usr/bin/env node

/**
 * V0.app Browser Component Collector
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –±—Ä–∞—É–∑–µ—Ä–Ω—É—é –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—é –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∫–æ–¥–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
 */

const fs = require('fs');
const path = require('path');

// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
const metadataPath = path.join(__dirname, '..', 'collected-components', 'components-metadata.json');
const componentsMetadata = JSON.parse(fs.readFileSync(metadataPath, 'utf8'));

/**
 * –°–æ–∑–¥–∞–µ—Ç —Å–∫—Ä–∏–ø—Ç –¥–ª—è MCP Playwright
 */
function createPlaywrightScript() {
  const script = `
// MCP Playwright Script –¥–ª—è —Å–±–æ—Ä–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —Å v0.app
// –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω —á–µ—Ä–µ–∑ MCP Playwright

const components = ${JSON.stringify(componentsMetadata, null, 2)};

async function collectComponentCode(component) {
  try {
    console.log(\`üîç –°–æ–±–∏—Ä–∞–µ–º –∫–æ–¥ –¥–ª—è: \${component.name}\`);
    
    // –ù–∞–≤–∏–≥–∞—Ü–∏—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
    await page.goto(component.url, { waitUntil: 'networkidle' });
    
    // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    await page.waitForTimeout(2000);
    
    // –ò—â–µ–º –∫–Ω–æ–ø–∫—É "Open in" –∏–ª–∏ "View Code"
    const openButton = await page.$('button:has-text("Open in"), button:has-text("View Code"), [data-testid="open-in-button"]');
    
    if (openButton) {
      await openButton.click();
      await page.waitForTimeout(1000);
      
      // –ò—â–µ–º –∫–æ–¥ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
      const codeElement = await page.$('pre, code, [data-testid="code-block"]');
      
      if (codeElement) {
        const code = await codeElement.textContent();
        return {
          ...component,
          code: code.trim(),
          status: 'collected',
          collectedAt: new Date().toISOString()
        };
      }
    }
    
    // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± - –ø–æ–∏—Å–∫ –≤ DOM
    const codeBlocks = await page.$$('pre code, .code-block, [class*="code"]');
    
    for (const block of codeBlocks) {
      const text = await block.textContent();
      if (text && text.length > 100 && text.includes('export') || text.includes('function')) {
        return {
          ...component,
          code: text.trim(),
          status: 'collected',
          collectedAt: new Date().toISOString()
        };
      }
    }
    
    return {
      ...component,
      status: 'not_found',
      error: 'Code not found on page'
    };
    
  } catch (error) {
    return {
      ...component,
      status: 'error',
      error: error.message
    };
  }
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–±–æ—Ä–∞
async function collectAllComponents() {
  const results = [];
  
  for (const component of components) {
    const result = await collectComponentCode(component);
    results.push(result);
    
    // –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
    await page.waitForTimeout(1000);
  }
  
  return results;
}

// –ó–∞–ø—É—Å–∫ —Å–±–æ—Ä–∞
collectAllComponents().then(results => {
  console.log('–°–±–æ—Ä –∑–∞–≤–µ—Ä—à–µ–Ω:', results);
  return results;
});
`;

  return script;
}

/**
 * –°–æ–∑–¥–∞–µ—Ç –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è MCP Playwright
 */
function createPlaywrightInstructions() {
  const instructions = `
# –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è —Å–±–æ—Ä–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —Å v0.app

## –®–∞–≥ 1: –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞
1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫ MCP Playwright
2. –û—Ç–∫—Ä–æ–π—Ç–µ –±—Ä–∞—É–∑–µ—Ä —á–µ—Ä–µ–∑ MCP Playwright

## –®–∞–≥ 2: –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞
–í—ã–ø–æ–ª–Ω–∏—Ç–µ —Å–ª–µ–¥—É—é—â–∏–π —Å–∫—Ä–∏–ø—Ç –≤ MCP Playwright:

\`\`\`javascript
${createPlaywrightScript()}
\`\`\`

## –®–∞–≥ 3: –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
–ü–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–∞:
1. –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ —Ñ–∞–π–ª
2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤

## –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø–æ–¥—Ö–æ–¥ - —Ä—É—á–Ω–æ–π —Å–±–æ—Ä
–ï—Å–ª–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Å–±–æ—Ä –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –º–æ–∂–Ω–æ —Å–æ–±–∏—Ä–∞—Ç—å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –≤—Ä—É—á–Ω—É—é:

1. –û—Ç–∫—Ä–æ–π—Ç–µ –∫–∞–∂–¥—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É v0.app
2. –ù–∞–π–¥–∏—Ç–µ –∫–Ω–æ–ø–∫—É "Open in" –∏–ª–∏ "View Code"
3. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∫–æ–¥ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
4. –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —Ñ–∞–π–ª

## –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ñ–∞–π–ª–æ–≤
–ö–∞–∂–¥—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ —Ñ–∞–π–ª:
\`collected-components/{category}/{component-id}.tsx\`

## –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
–î–æ–ø–æ–ª–Ω–∏—Ç–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ:
- –°–ª–æ–∂–Ω–æ—Å—Ç–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
- –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç—è—Ö
- –¢–µ–≥–∞—Ö
- –û–ø–∏—Å–∞–Ω–∏–∏
`;

  return instructions;
}

/**
 * –°–æ–∑–¥–∞–µ—Ç —à–∞–±–ª–æ–Ω –¥–ª—è —Ä—É—á–Ω–æ–≥–æ —Å–±–æ—Ä–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
 */
function createManualCollectionTemplate() {
  const template = `
# –®–∞–±–ª–æ–Ω –¥–ª—è —Ä—É—á–Ω–æ–≥–æ —Å–±–æ—Ä–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤

## –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ñ–∞–π–ª–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
\`\`\`tsx
// {component-name}.tsx
// –ò—Å—Ç–æ—á–Ω–∏–∫: {component-url}
// –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {component-category}
// –°–ª–æ–∂–Ω–æ—Å—Ç—å: {low|medium|high}
// –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: {dependency-list}

import React from 'react';
// –î–æ–±–∞–≤—å—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∏–º–ø–æ—Ä—Ç—ã

interface {ComponentName}Props {
  // –û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ –ø—Ä–æ–ø—Å—ã –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
}

export const {ComponentName}: React.FC<{ComponentName}Props> = ({ 
  // –î–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä—É–π—Ç–µ –ø—Ä–æ–ø—Å—ã
}) => {
  // –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  
  return (
    <div>
      {/* JSX –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ */}
    </div>
  );
};

export default {ComponentName};
\`\`\`

## –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
\`\`\`json
{
  "id": "{component-id}",
  "name": "{component-name}",
  "category": "{category}",
  "url": "{source-url}",
  "complexity": "{low|medium|high}",
  "dependencies": ["dependency1", "dependency2"],
  "tags": ["tag1", "tag2"],
  "description": "–û–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞",
  "usage": "–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è",
  "status": "collected"
}
\`\`\`
`;

  return template;
}

/**
 * –°–æ–∑–¥–∞–µ—Ç —Å–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–±—Ä–∞–Ω–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
 */
function createComponentProcessor() {
  const processor = `
#!/usr/bin/env node

/**
 * Component Processor
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ–±—Ä–∞–Ω–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∏ –∏–Ω—Ç–µ–≥—Ä–∏—Ä—É–µ—Ç –∏—Ö –≤ –ø—Ä–æ–µ–∫—Ç
 */

const fs = require('fs');
const path = require('path');

class ComponentProcessor {
  constructor() {
    this.baseDir = path.join(__dirname, '..', 'collected-components');
    this.outputDir = path.join(__dirname, '..', 'src', 'components', 'collected');
  }

  /**
   * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—Å–µ —Å–æ–±—Ä–∞–Ω–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
   */
  async processAllComponents() {
    console.log('üîÑ –ù–∞—á–∏–Ω–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤...');
    
    const categories = fs.readdirSync(this.baseDir)
      .filter(item => fs.statSync(path.join(this.baseDir, item)).isDirectory());
    
    for (const category of categories) {
      await this.processCategory(category);
    }
    
    console.log('‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
  }

  /**
   * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
   */
  async processCategory(category) {
    console.log(\`üìÅ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é: \${category}\`);
    
    const categoryDir = path.join(this.baseDir, category);
    const files = fs.readdirSync(categoryDir)
      .filter(file => file.endsWith('.tsx') || file.endsWith('.jsx'));
    
    for (const file of files) {
      await this.processComponent(category, file);
    }
  }

  /**
   * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—Ç–¥–µ–ª—å–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
   */
  async processComponent(category, filename) {
    const filePath = path.join(this.baseDir, category, filename);
    const content = fs.readFileSync(filePath, 'utf8');
    
    // –ê–¥–∞–ø—Ç–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –ø–æ–¥ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç–∞
    const adaptedContent = this.adaptComponent(content, category, filename);
    
    // –°–æ–∑–¥–∞–µ–º –≤—ã—Ö–æ–¥–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
    const outputCategoryDir = path.join(this.outputDir, category);
    if (!fs.existsSync(outputCategoryDir)) {
      fs.mkdirSync(outputCategoryDir, { recursive: true });
    }
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
    const outputPath = path.join(outputCategoryDir, filename);
    fs.writeFileSync(outputPath, adaptedContent);
    
    console.log(\`‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω: \${category}/\${filename}\`);
  }

  /**
   * –ê–¥–∞–ø—Ç–∏—Ä—É–µ—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –ø–æ–¥ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç–∞
   */
  adaptComponent(content, category, filename) {
    // –î–æ–±–∞–≤–ª—è–µ–º –∏–º–ø–æ—Ä—Ç—ã –¥–ª—è UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
    const uiImports = \`
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Card } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
\`;

    // –ó–∞–º–µ–Ω—è–µ–º –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–µ –∏–º–ø–æ—Ä—Ç—ã –Ω–∞ –∞–±—Å–æ–ª—é—Ç–Ω—ã–µ
    let adaptedContent = content
      .replace(/from ['"]\\.\\.?\\//g, 'from "@/')
      .replace(/from ['"]\\.\\.?\\//g, 'from "@/');

    // –î–æ–±–∞–≤–ª—è–µ–º TypeScript —Ç–∏–ø–∏–∑–∞—Ü–∏—é –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    if (!adaptedContent.includes('interface') && !adaptedContent.includes('type')) {
      adaptedContent = adaptedContent.replace(
        /export const (\\w+)/,
        \`interface \${category.charAt(0).toUpperCase() + category.slice(1)}Props {
  // –û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ –ø—Ä–æ–ø—Å—ã –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
}

export const $1\`
      );
    }

    return adaptedContent;
  }
}

// –ó–∞–ø—É—Å–∫ –æ–±—Ä–∞–±–æ—Ç–∫–∏
if (require.main === module) {
  const processor = new ComponentProcessor();
  processor.processAllComponents().catch(console.error);
}

module.exports = ComponentProcessor;
`;

  return processor;
}

// –°–æ–∑–¥–∞–µ–º –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã
function createCollectionFiles() {
  const outputDir = path.join(__dirname, '..', 'scripts');
  
  // –°–æ–∑–¥–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
  const instructions = createPlaywrightInstructions();
  fs.writeFileSync(path.join(outputDir, 'playwright-instructions.md'), instructions);
  
  // –°–æ–∑–¥–∞–µ–º —à–∞–±–ª–æ–Ω –¥–ª—è —Ä—É—á–Ω–æ–≥–æ —Å–±–æ—Ä–∞
  const template = createManualCollectionTemplate();
  fs.writeFileSync(path.join(outputDir, 'manual-collection-template.md'), template);
  
  // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
  const processor = createComponentProcessor();
  fs.writeFileSync(path.join(outputDir, 'component-processor.js'), processor);
  
  console.log('üìÅ –°–æ–∑–¥–∞–Ω—ã —Ñ–∞–π–ª—ã –¥–ª—è —Å–±–æ—Ä–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤:');
  console.log('  - playwright-instructions.md');
  console.log('  - manual-collection-template.md');
  console.log('  - component-processor.js');
}

// –ó–∞–ø—É—Å–∫
if (require.main === module) {
  createCollectionFiles();
  console.log('üéØ –ì–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –Ω–∞—á–∏–Ω–∞—Ç—å —Å–±–æ—Ä –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤.');
}

module.exports = {
  createPlaywrightScript,
  createPlaywrightInstructions,
  createManualCollectionTemplate,
  createComponentProcessor
};
